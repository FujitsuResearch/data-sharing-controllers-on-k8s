//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedExecutable) DeepCopyInto(out *AllowedExecutable) {
	*out = *in
	if in.Scripts != nil {
		in, out := &in.Scripts, &out.Scripts
		*out = make([]*AllowedScript, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AllowedScript)
				**out = **in
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedExecutable.
func (in *AllowedExecutable) DeepCopy() *AllowedExecutable {
	if in == nil {
		return nil
	}
	out := new(AllowedExecutable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedScript) DeepCopyInto(out *AllowedScript) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedScript.
func (in *AllowedScript) DeepCopy() *AllowedScript {
	if in == nil {
		return nil
	}
	out := new(AllowedScript)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerStatus) DeepCopyInto(out *ConsumerStatus) {
	*out = *in
	in.LastUpdatedAt.DeepCopyInto(&out.LastUpdatedAt)
	in.ExpiredAt.DeepCopyInto(&out.ExpiredAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerStatus.
func (in *ConsumerStatus) DeepCopy() *ConsumerStatus {
	if in == nil {
		return nil
	}
	out := new(ConsumerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLifetime) DeepCopyInto(out *DataLifetime) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLifetime.
func (in *DataLifetime) DeepCopy() *DataLifetime {
	if in == nil {
		return nil
	}
	out := new(DataLifetime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataLifetime) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLifetimeList) DeepCopyInto(out *DataLifetimeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataLifetime, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLifetimeList.
func (in *DataLifetimeList) DeepCopy() *DataLifetimeList {
	if in == nil {
		return nil
	}
	out := new(DataLifetimeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataLifetimeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputDataSpec) DeepCopyInto(out *InputDataSpec) {
	*out = *in
	if in.MessageQueueSubscriber != nil {
		in, out := &in.MessageQueueSubscriber, &out.MessageQueueSubscriber
		*out = new(MessageQueueSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemSpec != nil {
		in, out := &in.FileSystemSpec, &out.FileSystemSpec
		*out = new(InputFileSystemSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RdbSpec != nil {
		in, out := &in.RdbSpec, &out.RdbSpec
		*out = new(InputRdbSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputDataSpec.
func (in *InputDataSpec) DeepCopy() *InputDataSpec {
	if in == nil {
		return nil
	}
	out := new(InputDataSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputFileSystemSpec) DeepCopyInto(out *InputFileSystemSpec) {
	*out = *in
	if in.FromPersistentVolumeClaimRef != nil {
		in, out := &in.FromPersistentVolumeClaimRef, &out.FromPersistentVolumeClaimRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.ToPersistentVolumeClaimRef != nil {
		in, out := &in.ToPersistentVolumeClaimRef, &out.ToPersistentVolumeClaimRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.AllowedExecutables != nil {
		in, out := &in.AllowedExecutables, &out.AllowedExecutables
		*out = make([]*AllowedExecutable, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AllowedExecutable)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputFileSystemSpec.
func (in *InputFileSystemSpec) DeepCopy() *InputFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(InputFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputRdbSpec) DeepCopyInto(out *InputRdbSpec) {
	*out = *in
	if in.ConfigurationRef != nil {
		in, out := &in.ConfigurationRef, &out.ConfigurationRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputRdbSpec.
func (in *InputRdbSpec) DeepCopy() *InputRdbSpec {
	if in == nil {
		return nil
	}
	out := new(InputRdbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifetimeSpec) DeepCopyInto(out *LifetimeSpec) {
	*out = *in
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(Trigger)
		**out = **in
	}
	if in.InputData != nil {
		in, out := &in.InputData, &out.InputData
		*out = make([]InputDataSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputData != nil {
		in, out := &in.OutputData, &out.OutputData
		*out = make([]OutputDataSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifetimeSpec.
func (in *LifetimeSpec) DeepCopy() *LifetimeSpec {
	if in == nil {
		return nil
	}
	out := new(LifetimeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifetimeStatus) DeepCopyInto(out *LifetimeStatus) {
	*out = *in
	in.Provider.DeepCopyInto(&out.Provider)
	if in.Consumer != nil {
		in, out := &in.Consumer, &out.Consumer
		*out = make(map[string]ConsumerStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifetimeStatus.
func (in *LifetimeStatus) DeepCopy() *LifetimeStatus {
	if in == nil {
		return nil
	}
	out := new(LifetimeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MessageQueueSpec) DeepCopyInto(out *MessageQueueSpec) {
	*out = *in
	if in.MessageQueueRef != nil {
		in, out := &in.MessageQueueRef, &out.MessageQueueRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MessageQueueSpec.
func (in *MessageQueueSpec) DeepCopy() *MessageQueueSpec {
	if in == nil {
		return nil
	}
	out := new(MessageQueueSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputDataSpec) DeepCopyInto(out *OutputDataSpec) {
	*out = *in
	if in.MessageQueuePublisher != nil {
		in, out := &in.MessageQueuePublisher, &out.MessageQueuePublisher
		*out = new(PublishMessageQueueSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSystemSpec != nil {
		in, out := &in.FileSystemSpec, &out.FileSystemSpec
		*out = new(OutputFileSystemSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RdbSpec != nil {
		in, out := &in.RdbSpec, &out.RdbSpec
		*out = new(OutputRdbSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputDataSpec.
func (in *OutputDataSpec) DeepCopy() *OutputDataSpec {
	if in == nil {
		return nil
	}
	out := new(OutputDataSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputFileSystemSpec) DeepCopyInto(out *OutputFileSystemSpec) {
	*out = *in
	if in.PersistentVolumeClaimRef != nil {
		in, out := &in.PersistentVolumeClaimRef, &out.PersistentVolumeClaimRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.AllowedExecutables != nil {
		in, out := &in.AllowedExecutables, &out.AllowedExecutables
		*out = make([]*AllowedExecutable, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AllowedExecutable)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputFileSystemSpec.
func (in *OutputFileSystemSpec) DeepCopy() *OutputFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(OutputFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputRdbSpec) DeepCopyInto(out *OutputRdbSpec) {
	*out = *in
	if in.ConfigurationRef != nil {
		in, out := &in.ConfigurationRef, &out.ConfigurationRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputRdbSpec.
func (in *OutputRdbSpec) DeepCopy() *OutputRdbSpec {
	if in == nil {
		return nil
	}
	out := new(OutputRdbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderStatus) DeepCopyInto(out *ProviderStatus) {
	*out = *in
	in.LastUpdatedAt.DeepCopyInto(&out.LastUpdatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderStatus.
func (in *ProviderStatus) DeepCopy() *ProviderStatus {
	if in == nil {
		return nil
	}
	out := new(ProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublishMessageQueueSpec) DeepCopyInto(out *PublishMessageQueueSpec) {
	*out = *in
	if in.MessageQueueSpec != nil {
		in, out := &in.MessageQueueSpec, &out.MessageQueueSpec
		*out = new(MessageQueueSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublishMessageQueueSpec.
func (in *PublishMessageQueueSpec) DeepCopy() *PublishMessageQueueSpec {
	if in == nil {
		return nil
	}
	out := new(PublishMessageQueueSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trigger) DeepCopyInto(out *Trigger) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trigger.
func (in *Trigger) DeepCopy() *Trigger {
	if in == nil {
		return nil
	}
	out := new(Trigger)
	in.DeepCopyInto(out)
	return out
}
